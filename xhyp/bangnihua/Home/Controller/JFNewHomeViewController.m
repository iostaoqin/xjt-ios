//
//  JFNewHomeViewController.m
//  spendHelp
//
//  Created by Daisy  on 2018/12/25.
//  Copyright ¬© 2018Âπ¥ Daisy. All rights reserved.
//

#import "JFNewHomeViewController.h"
#import "JFNewHeaderEditView.h"
#import "JFHeaderNewCollectionViewCell.h"
#import "JFNewHeaderCollectionReusableViewEdit.h"
#import "JFHomeNewEditTableViewCell.h"
#import "JFBigNewEditViewController.h"
#import "JFEditSucessViewController.h"
#import "JFGiveDataViewController.h"
#import "JFEditHomeView.h"
#import "JFPagerViewEdit.h"
#import "JFNewHomeEditCycleView.h"
#import "JFEditHomeSecondNewCollectionViewCell.h"
static const CGFloat JXheightForHeaderInSection = 40 ;
@interface JFNewHomeViewController ()<UICollectionViewDelegate,UICollectionViewDataSource,UICollectionViewDelegateFlowLayout,JXCategoryViewDelegate,JFPagerViewEditDelegate,SDCycleScrollViewDelegate>
@property (nonatomic, strong)UITableView  *homeTabelView;
@property (nonatomic, strong)UIView *headerView;
/**ÊúÄÊñ∞Âè£Â≠ê**/
@property (nonatomic, strong)JFNewHeaderEditView *firstHeaderView;
/***ËΩÆÊí≠Âõæ**/
@property (nonatomic, strong)JFNewHomeEditCycleView *cycleView;

@property (nonatomic, strong)UICollectionView *firstCollectionView;
@property (nonatomic, strong)NSArray *nameArray;
@property (nonatomic, strong)NSArray *imgArray;
@property (nonatomic, strong)UICollectionView *secondCollectionView;
/* Ë∫´‰ªΩËØÅ*/
@property (nonatomic, strong)NSMutableArray *secondAtrray;
/*ÊúÄÊñ∞Âè£Â≠ê ËΩÆÊí≠Âõæ*/
@property (nonatomic, strong)NSMutableArray *latestCycleArray;
/*ÊúÄÊñ∞Âè£Â≠ê*/
@property (nonatomic, strong)NSMutableArray *latestArray;
/*‰ªäÊó•Êé®ËçêÈÉ®ÂàÜ*/
@property (nonatomic, strong)NSMutableArray *recommendationArr;
@property (nonatomic,strong)JFPagerViewEdit  *pageingView;

@property (nonatomic, strong)JXCategoryTitleView *categoryView;
@property (nonatomic, assign)CGFloat JXTableHeaderViewHeight;
@property (nonatomic, strong)NSString *headerShowType;//ÊúÄÊñ∞Âè£Â≠êÂíåËΩÆÊí≠Âõæ
/*webÊï∞ÊçÆ */
@property (nonatomic, strong)NSMutableArray *webArr;
/*üíïSuperÊï∞ÊçÆÊèê‰∫§Á•ûÁ≠ñ */
@property (nonatomic, strong)NSMutableArray *policyArr;
@property (nonatomic, strong)UILabel *otherNameLable;
@property (nonatomic, assign)BOOL  isrequestSuccess;//
@end

@implementation JFNewHomeViewController
-(void)dealloc{

     [[NSNotificationCenter defaultCenter]removeObserver:self name:@"hongbaoAction" object:nil];
      [[NSNotificationCenter defaultCenter]removeObserver:self name:@"refreshDataNotice" object:nil];
}
-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self.navigationController setNavigationBarHidden:YES animated:animated];
    //dÂèëÈÄÅÈÄöÁü•ÁªôÁ∫¢ÂåÖÂä®Áîª
    [[NSNotificationCenter defaultCenter]postNotificationName:@"hongbaoAction" object:nil];
    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];
}
- (void)viewDidLoad {
    [super viewDidLoad];
    [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"jxUserInfo"];
    [[NSUserDefaults standardUserDefaults]synchronize];
    self.view.backgroundColor  = [UIColor colorWithHexString:@"#F5F5F5"];
    self.navigationController.interactivePopGestureRecognizer.delegate = (id)self;
    self.isNeedHeader = YES;
    self.isNeedFooter = NO;
    self.isrequestSuccess  = YES;
    self.secondAtrray  = [NSMutableArray array];
    self.latestArray = [NSMutableArray array];
    self.latestCycleArray= [NSMutableArray array];
    self.recommendationArr  = [NSMutableArray array];
    self.webArr  = [NSMutableArray array];
    self.policyArr=  [NSMutableArray  array];
    //
    [self cycleAndVestbagData];
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(refreshHomeDataNotice:) name:@"refreshDataNotice" object:nil];
    
}
-(void)refreshHomeDataNotice:(NSNotification *)notice{
    //ÂõûÂà∞È°∂ÈÉ®
    NSDictionary  *dic =  notice.userInfo;
    if ([dic[@"tab_name"]isEqualToString:first_tab_text]) {
         [self.categoryView selectItemAtIndex:0];
//        [self cycleAndVestbagData];
    }
//    if (self.headerView.window == nil) return;
//    //Âà§Êñ≠ÂΩìÂâçÁöÑviewÊòØÂê¶‰∏éÁ™óÂè£ÈáçÂêà nil‰ª£Ë°®Â±èÂπïÂ∑¶‰∏äËßí
//    if (![self.headerView hu_intersectsWithAnotherView:nil]) return;
//
    
    
    
}
#pragma mark  - Â§¥ÈÉ®Â∏ÉÂ±Ä
-(void)headerUI:(NSString *)showType{
    //    WEAKSELF;
    /**ËØ∑Ê±ÇÊÄªÊé•Âè£**/
    [self requestAllData];
    self.headerShowType   = showType;
    if ([showType  isEqualToString:home_show_cycleOrLatestProducts_text]) {
        //ÊòæÁ§∫ÊúÄÊñ∞Âè£Â≠êÂ∏ÉÂ±Ä
        [self.cycleView removeFromSuperview];
        _JXTableHeaderViewHeight = 310 *JT_ADAOTER_WIDTH;
        self.headerView.frame  = CGRectMake(0, 0, JT_ScreenW, _JXTableHeaderViewHeight  *JT_ADAOTER_WIDTH);
        /**Â§¥ÈÉ®ÂÄíËÆ°Êó∂ÈÉ®ÂàÜ**/
         [_headerView addSubview:self.firstHeaderView];
    }else{
        //ËΩÆÊí≠Âõæ
        [self.firstHeaderView removeFromSuperview];
        _JXTableHeaderViewHeight  = 390*JT_ADAOTER_WIDTH;
        self.headerView.frame  = CGRectMake(0, 0, JT_ScreenW, _JXTableHeaderViewHeight  *JT_ADAOTER_WIDTH);
        /**ËΩÆÊí≠ÂõæÈÉ®ÂàÜ**/
       [_headerView addSubview:self.cycleView];
    }
    /** give_card_text  big_give_text**/
    [self setupFirstCollecton:showType];
  
    [self setupSecondCollecton];
   
}
#pragma mark -  ‰ªäÊó•Êé®ËçêÂ∏ÉÂ±Ä
-(void)recommendationUI{
    if (self.recommendationArr.count) {
        NSMutableArray *temArr  = [NSMutableArray array];
        [self.recommendationArr enumerateObjectsUsingBlock:^(JFEditHomemodel *giveModel, NSUInteger idx, BOOL * _Nonnull stop) {
            [temArr addObject:giveModel.tagName];
        }];
        [self.view  addSubview:self.pageingView];
    
        self.categoryView.titles = [temArr copy];
        _categoryView.contentScrollView = self.pageingView
        .listContainerView.collectionView;
        [self.otherNameLable mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(self.categoryView.mas_left).offset(300 * JT_ADAOTER_WIDTH);
            make.right.equalTo(self.categoryView.mas_right).offset(-10*JT_ADAOTER_WIDTH);
            make.top.bottom.equalTo(self.categoryView);
        }];
        
    }
}
-(void)setupFirstCollecton:(NSString *)showType{
    WEAKSELF;
    [_headerView addSubview:self.firstCollectionView];
     [_firstCollectionView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.equalTo(weakSelf.headerView);
        make.height.mas_equalTo(110 * JT_ADAOTER_WIDTH);
    }];
    if ([showType isEqualToString:home_show_cycleOrLatestProducts_text]) {
        [_firstCollectionView mas_updateConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(weakSelf.firstHeaderView.mas_bottom).offset(-10*JT_ADAOTER_WIDTH);
        }];
    }else{
        [_firstCollectionView mas_updateConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(weakSelf.cycleView.mas_bottom).offset(-10*JT_ADAOTER_WIDTH);
        }];
    }
}
-(void)setupSecondCollecton{
    WEAKSELF;
    [_headerView addSubview:self.secondCollectionView];
    [_secondCollectionView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.equalTo(weakSelf.headerView);
        make.height.mas_equalTo(110  * JT_ADAOTER_WIDTH);
        make.top.equalTo(weakSelf.firstCollectionView.mas_bottom);
    }];
}
- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer {
    return YES;
}
- (void)viewDidLayoutSubviews {
    [super viewDidLayoutSubviews];
    
    self.pageingView.frame = self.view.bounds;
}
#pragma mark - JXPagingViewDelegate

- (UIView *)tableHeaderViewInPagerView:(JFPagerViewEdit *)pagerView {
    return self.headerView;
}
- (NSUInteger)tableHeaderViewHeightInPagerView:(JFPagerViewEdit *)pagerView {
    return _JXTableHeaderViewHeight;
}
- (NSUInteger)heightForPinSectionHeaderInPagerView:(JFPagerViewEdit *)pagerView {
    return JXheightForHeaderInSection  *JT_ADAOTER_WIDTH;
}
- (UIView *)viewForPinSectionHeaderInPagerView:(JFPagerViewEdit *)pagerView {
    return self.categoryView;
}
-(NSInteger)numberOfListsInPagerView:(JFPagerViewEdit *)pagerView{
    if (self.recommendationArr.count) {
        
        return self.recommendationArr.count;
    }return 0;
}
-(id<JFPagerViewEditListViewDelegate>)pagerView:(JFPagerViewEdit *)pagerView initListAtIndex:(NSInteger)index{
    JFEditHomeView *homeVC = [[JFEditHomeView alloc]init];
    homeVC.temVC = self;
    JFEditHomemodel *homeModel =self.recommendationArr[index];
    homeVC.homeModel  = homeModel;
    homeVC.isNeedFooter  =self.isNeedFooter;
    homeVC.isNeedHeader  = self.isNeedHeader;
    [homeVC dropdownRefreshHeader];
    return homeVC;
}
#pragma mark - JXCategoryViewDelegate
- (void)categoryView:(JXCategoryBaseView *)categoryView didClickedItemContentScrollViewTransitionToIndex:(NSInteger)index {
    [self.pageingView.listContainerView.collectionView scrollToItemAtIndexPath:[NSIndexPath indexPathForItem:index inSection:0] atScrollPosition:UICollectionViewScrollPositionCenteredHorizontally animated:NO];
}
- (void)categoryView:(JXCategoryBaseView *)categoryView didSelectedItemAtIndex:(NSInteger)index {
    self.navigationController.interactivePopGestureRecognizer.enabled = (index == 0);
}
#pragma mark - collectionDelegate
-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView{
    
    return 1;
}
-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
    if (collectionView  == _firstCollectionView) {
        
        return self.nameArray.count;
    }else{
   
        if (self.secondAtrray.count) {
            return self.secondAtrray.count;
        }
        return 0;
    }
}
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView
                       layout:(UICollectionViewLayout *)collectionViewLayout
       insetForSectionAtIndex:(NSInteger)section
{
    if (collectionView == _firstCollectionView) {
        
        return UIEdgeInsetsMake(0, 15 *JT_ADAOTER_WIDTH, 0, 15*JT_ADAOTER_WIDTH);//ÂàÜÂà´‰∏∫‰∏ä„ÄÅÂ∑¶„ÄÅ‰∏ã„ÄÅÂè≥
    }else{
        return UIEdgeInsetsZero;
    }
}
-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    if (collectionView == _firstCollectionView) {
        JFHeaderNewCollectionViewCell *firstCell = (JFHeaderNewCollectionViewCell  *)[collectionView dequeueReusableCellWithReuseIdentifier:@"priceCollection" forIndexPath:indexPath];
        firstCell.backgroundColor  =[UIColor clearColor];
        [firstCell getHeaderImg:self.imgArray[indexPath.row] nameStr:self.nameArray[indexPath.row]];
        return firstCell;
    } else {
        JFEditHomeSecondNewCollectionViewCell *secondCell = (JFEditHomeSecondNewCollectionViewCell  *)[collectionView dequeueReusableCellWithReuseIdentifier:@"secondCollection" forIndexPath:indexPath];
        
        secondCell.headerImg.backgroundColor  = [UIColor clearColor];
     
        [secondCell getSecondData:self.secondAtrray[indexPath.row]];
        return secondCell;
    }
}
#pragma mark-  Êü•ÁúãÊõ¥Â§ö
-(void)checkMoreGesture{
    //Âà§Êñ≠Áî®Êà∑ÊòØÂê¶Ëé∑ÂèñÂà∞Ââ™ÂàáÊùøÁöÑÂÜÖÂÆπ
    //Ëã•Ê≤°Êúâ Â∞±Ë∑≥ËΩ¨Âà∞ÁôªÂΩïÁïåÈù¢Ëé∑Âèñuserid Áî®‰∫éÁ•ûÊµã
       self.tabBarController.selectedIndex  = 1;
}
#pragma mark -Â¢ûË°•ËßÜÂõæ
-(UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath{
    
    if ([kind isEqualToString:UICollectionElementKindSectionFooter] && collectionView == _firstCollectionView) {
        JFNewHeaderCollectionReusableViewEdit *headerView;
        if (indexPath.section == 0) {
            headerView = [collectionView dequeueReusableSupplementaryViewOfKind:kind withReuseIdentifier:@"UICollectionElementKindSectionFooter" forIndexPath:indexPath];
        }
        headerView.backgroundColor  = [UIColor clearColor];
        return headerView;
    }
    return nil;
}
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout
referenceSizeForFooterInSection:(NSInteger)section{
    if (collectionView == _firstCollectionView) {
        return CGSizeMake(0, 40 * JT_ADAOTER_WIDTH);
    } else {
        return CGSizeMake(0, 0);
    }
    
}
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    if (collectionView == _firstCollectionView) {
        JFHeaderNewCollectionViewCell *firstCell = (JFHeaderNewCollectionViewCell *)[_firstCollectionView cellForItemAtIndexPath:indexPath];
        JFUserInfoTool *userInfo  = [JFUserManager shareManager].currentUserInfo;
        if (indexPath.row == 2) {
            //Ê£ÄÊü•Áî®Êà∑ÊòØÂê¶ÁôªÂΩï
            //1.Ê≤°ÊúâÁôªÂΩï Ëµ∞Èó™È™å ÊàñËÄÖÊâãÊú∫È™åËØÅÁ†Å
            //big_give_text
            if ([JFHSUtilsTool isBlankString:userInfo.loginSuccessKey]) {
                //yes  ‰ª£Ë°®Áî®Êà∑ Ê≤°Êúâ ÁôªÂΩï
//                [CLShanYanSDKManager preGetPhonenumber];
                [JFShanYanRequestEditTool requestShanYan:self jumpToVC:@"JFBigNewEditViewController" jumVCParameter:@""cityStr:@"" tittlName:@""webArray:@[]];
            }else{
                if (self.isrequestSuccess) {
                        [self creatBigLoanData:firstCell.nameLable.text  selectedIdx:indexPath.row];
                    self.isrequestSuccess = NO;
                }
           
                
            }
        }else{
            self.tabBarController.selectedIndex  = indexPath.row + 1;
            if (indexPath.row ==1) {
                //give_card_text money 
                [self submitHomeSensorsAnalyties:@"1001" businessName:firstCell.nameLable.text businessTab:@"JFNewThirdCardViewController" posIdx:[NSString stringWithFormat:@"%zd",indexPath.row + 1] gotoSuccess:@"1"];
                //ÂèëÈÄÅ ÈÄöÁü•  ÁªôÂäûcreditCard  ÂõûÊªöÂà∞È°∂ÈÉ®
                [[NSNotificationCenter defaultCenter]postNotificationName:@"rollbackNotice" object:nil];
                
            }else{
             
                [self submitHomeSensorsAnalyties:@"1000" businessName:firstCell.nameLable.text businessTab:@"JFGiveDataViewController" posIdx:[NSString stringWithFormat:@"%zd",indexPath.row + 1] gotoSuccess:@"1"];
                [[NSNotificationCenter defaultCenter]postNotificationName:@"refreshFirstDataNotice" object:nil];
            }
        }
    }else{
        JFEditHomemodel *model  =self.secondAtrray[indexPath.row];
        //Âà§Êñ≠Áî®Êà∑ÊòØÂê¶Ëé∑ÂèñÂà∞Ââ™ÂàáÊùøÁöÑÂÜÖÂÆπ
        //Ëã•Ê≤°Êúâ Â∞±Ë∑≥ËΩ¨Âà∞ÁôªÂΩïÁïåÈù¢Ëé∑Âèñuserid Áî®‰∫éÁ•ûÊµã
        //ËØ∑Ê±ÇÂØπÂ∫îÁöÑÊé•Âè£  Ëé∑ÂèñwebURL
        [self getSecondCollection:model.areaId areaTagId:model.areaTagId selected:indexPath.row];
    }
}
-(void)submitHomeSensorsAnalyties:(NSString *)businessId businessName:(NSString *)name  businessTab:(NSString  *)tabVC  posIdx:(NSString *)pos gotoSuccess:(NSString *)gotoStr{
    NSDictionary *dic =  @{@"business_id":businessId,@"business_name":name,@"business_tab":tabVC,@"pos":pos,@"goto_success":gotoStr};
    [JFHSUtilsTool submitSensorsAnalytics:@"BusinessClick" parameter:dic];
}
#pragma mark -  ËØ∑Ê±ÇÊÄªÊé•Âè£  
-(void)requestAllData{
    WEAKSELF;
    NSString  *allUrl  = [NSString stringWithFormat:@"%@/manager/pf/loanTags",HS_USER_URL];
    NSDictionary *userDic=  @{@"os":@"ios",@"appName":app_name_type};
    NSString *url   =[JFHSUtilsTool conectUrl:[userDic  mutableCopy] url:allUrl];
    [PPNetworkHelper GET:url parameters:@{} success:^(id responseObject) {
        JTLog(@"%@",responseObject);
         [self.secondAtrray removeAllObjects];//Ê∏ÖÁ©∫Êï∞ÁªÑ
        [self.latestCycleArray removeAllObjects];
        [self.recommendationArr removeAllObjects];
        if ([[NSString  stringWithFormat:@"%@",responseObject[@"resultCode"]]isEqualToString:@"0"]) {
            //ËØ∑Ê±ÇÊàêÂäü
            //Â§ÑÁêÜareaId  ‰∏∫201‰ª•ÂêéÁöÑÊï∞ÊçÆ
            for (NSDictionary  *homeDic in responseObject[@"areaTags"]) {
                if ([[NSString stringWithFormat:@"%@",homeDic[@"areaId"]]isEqualToString:@"201"]||[[NSString stringWithFormat:@"%@",homeDic[@"areaId"]]isEqualToString:@"202"]) {
                    //Â≠òÂÖ•model  ÊúÄÊñ∞Âè£Â≠ê
                    JFEditHomemodel *model = [JFEditHomemodel mj_objectWithKeyValues:homeDic];
                    [self.latestCycleArray addObject:model];
                }
                //Ëß£ÊûêË∫´‰ªΩËØÅ ÈªëÊà∑‰∏ì‰∫´  ÈÉ®ÂàÜÊï∞ÊçÆ
               
                if ([[NSString stringWithFormat:@"%@",homeDic[@"areaId"]]isEqualToString:@"203"]) {
                    JFEditHomemodel *secondModel = [JFEditHomemodel mj_objectWithKeyValues:homeDic];
                    [self.secondAtrray addObject:secondModel];
                }
                //Ëß£Êûê‰ªäÊó•Êé®ËçêÈÉ®ÂàÜ areaId 204
                if ([[NSString stringWithFormat:@"%@",homeDic[@"areaId"]]isEqualToString:@"204"]) {
                    JFEditHomemodel *thirdModel = [JFEditHomemodel mj_objectWithKeyValues:homeDic];
                    [self.recommendationArr addObject:thirdModel];
                }
            }
            [self recommendationUI];
            //Âà∑Êñ∞Êï∞ÊçÆ
            [weakSelf.secondCollectionView reloadData];
            [weakSelf.homeTabelView reloadData];
            //ËØ∑Ê±Ç ÊÄªÊï∞ÊçÆÊàêÂäü‰πãÂêé ----ÊúÄÊñ∞Âè£Â≠êÊé•Âè£ or ËΩÆÊí≠Âõæ
            if (self.latestCycleArray.count) {
                
                [self latestDataOrCycle];
            }
        }
        
        
    } failure:^(NSError *error) {
        JTLog(@"%@",error);
    }];
}
#pragma mark - Âà§Êñ≠Áî®Êà∑ÊòØÂê¶Â∑≤ÁªèÁî≥ËØ∑big_text
-(void)getBigLoanData:(NSString *)titleName selectedIdx:(NSInteger)idx{
    //    WEAKSELF;
    NSString *isApply_url  = [NSString stringWithFormat:@"%@/manager/bnh/check/largeApply",HS_USER_URL];
    NSDictionary *userDic=  @{@"os":@"ios",@"appName":app_name_type};
    NSString *url   =[JFHSUtilsTool conectUrl:[userDic  mutableCopy] url:isApply_url];
    JFUserInfoTool *userInfo  = [JFUserManager shareManager].currentUserInfo;
    [PPNetworkHelper setValue:userInfo.loginSuccessKey forHTTPHeaderField:@"API_KEY"];
    
    [PPNetworkHelper GET:url parameters:@{} success:^(id responseObject) {
        JTLog(@"%@",responseObject);
        //resultCode  0 Ë∑≥ËΩ¨Âà∞Áî≥ËØ∑ ÁïåÈù¢
        //ÊèêÁ§∫Áî®Êà∑ Â∑≤ÁªèÁî≥ËØ∑
        self.isrequestSuccess = YES;
        if ([[NSString stringWithFormat:@"%@",responseObject[@"resultCode"]]isEqualToString:@"4"]) {
            [[JFHudMsgTool shareHusMsg]msgHud:MBProgressHUDModeText msgStr:responseObject[@"resultCodeMessage"]];
            [[JFHudMsgTool shareHusMsg]hiddenHud:MBProgressHUDModeText];
             [self submitHomeSensorsAnalyties:@"1002" businessName:titleName businessTab:@"JFBigNewEditViewController" posIdx:[NSString stringWithFormat:@"%zd",idx + 1] gotoSuccess:@"0"];
        }else{
            //Ë∑≥ËΩ¨big_give_textÁïåÈù¢
            JFBigNewEditViewController  *bigVC  = [[JFBigNewEditViewController alloc]init];
            bigVC.title = titleName;
            bigVC.bigLoanIdx = idx;
            bigVC.hidesBottomBarWhenPushed =  YES;
            [self.navigationController pushViewController:bigVC animated:YES];
              [self submitHomeSensorsAnalyties:@"1002" businessName:titleName businessTab:@"JFBigNewEditViewController" posIdx:[NSString stringWithFormat:@"%zd",idx + 1] gotoSuccess:@"1"];
        }
    } failure:^(NSError *error) {
        JTLog(@"big_give_textÈîôËØØ‰ø°ÊÅØerror= %@",error);
         self.isrequestSuccess = YES;
    }];
}
-(void)creatBigLoanData:(NSString *)titleName selectedIdx:(NSInteger)idx{
    [self getBigLoanData:titleName selectedIdx:idx];
}
#pragma mark -  ÊúÄÊñ∞Âè£Â≠êÊï∞ÊçÆorËΩÆÊí≠Âõæ
-(void)latestDataOrCycle{
    WEAKSELF;
    JFEditHomemodel *latestModel;
    NSDictionary *dic;
    //Áî±‰∫éË¶ÅÂÅöÁÇπÂáªtababrÁöÑÊó∂ÂÄôÈúÄË¶ÅÈáçÊñ∞ËØ∑Ê±ÇÊï∞ÊçÆ
    //ÂÅöÂà§Êñ≠  ÂΩì ÂêéÂè∞Ê≤°ÊúâÊ≤°ÊúâÂàáÊç¢ÁöÑÊó∂ÂÄô  ‰∏çÈúÄË¶ÅËØ∑Ê±ÇÊï∞ÊçÆ
    
    if ([self.headerShowType isEqualToString:[[NSUserDefaults standardUserDefaults]valueForKey:@"showTypeRequest"]] && self.latestArray.count) {
        //Ëã•Ê≤°ÂèòÂåñ
        return;
    }else{
        
 
    if ([self.headerShowType isEqualToString:home_show_cycleOrLatestProducts_text]) {
        /**ÊúÄÊñ∞Âè£Â≠ê**/
        latestModel  =self.latestCycleArray[0];
        dic =  @{@"areaTagId":latestModel.areaTagId,@"getConfig":@"true",@"os":@"ios",@"appName":app_name_type};
    }else{
        /**ËΩÆÊí≠ÂõæÊï∞ÊçÆ**/
        latestModel  =self.latestCycleArray[1];
        dic =  @{@"areaTagId":latestModel.areaTagId,@"areaId":latestModel.areaId,@"os":@"ios",@"appName":app_name_type};
    }
    NSString *latestUrl = [NSString stringWithFormat:@"%@/manager/pf/platforms",HS_USER_URL];
    
  
    NSString *dataUrl =  [JFHSUtilsTool conectUrl:[dic mutableCopy] url:latestUrl];
  
    [PPNetworkHelper GET:dataUrl parameters:nil success:^(id responseObject) {
        JTLog(@"ÊúÄÊñ∞Âè£Â≠ê=%@",responseObject);
        if ([[NSString stringWithFormat:@"%@",responseObject[@"resultCode"]]isEqualToString:@"0"]) {
            [self.latestArray removeAllObjects];
            [self.webArr removeAllObjects];
            [self.policyArr removeAllObjects];
            if ([weakSelf.headerShowType isEqualToString:home_show_cycleOrLatestProducts_text]) {
                //
                for (NSDictionary  *webDic in responseObject[@"areaTags"][0][@"platforms"]) {
                    JFEditHomemodel *webModel = [JFEditHomemodel mj_objectWithKeyValues:webDic];
                    [self.webArr addObject:webModel];
                }
                for (NSDictionary *temDic in responseObject[@"areaTags"]) {
                    JFEditLogModel *temModel  = [JFEditLogModel mj_objectWithKeyValues:temDic];
                    [self.policyArr addObject:temModel];
                }
                for (NSDictionary *dic in responseObject[@"area9Config"]) {
                    JFEditHomemodel *latestModel =[JFEditHomemodel mj_objectWithKeyValues:dic];
                    [self.latestArray addObject:latestModel];
                }
                
                //‰º†ÈÄÅÂÄíËÆ°Êó∂Êï∞ÊçÆ
                [weakSelf.firstHeaderView getLatestData:self.latestArray];
                
                //rÊèê‰∫§Êó•Âøó
                //Âà§Êñ≠platformsÊï∞ÁªÑ ÊòØÂê¶‰∏∫Á©∫ ‰∏∫Á©∫‰∏ç‰º†platformId
                NSArray *temArr  =responseObject[@"areaTags"][0][@"platforms"];
                if (temArr.count) {
                   [weakSelf getLogData:[NSString stringWithFormat:@"%@",responseObject[@"areaTags"][0][@"platforms"][0][@"platformId"]]];
                }
                
            }else{
                for (NSDictionary *dic in responseObject[@"areaTags"][0][@"platforms"]) {
                    JFEditHomemodel *latestModel =[JFEditHomemodel mj_objectWithKeyValues:dic];
                    [self.latestArray addObject:latestModel];
                }
                for (NSDictionary *temDic in responseObject[@"areaTags"]) {
                    JFEditLogModel *temModel  = [JFEditLogModel mj_objectWithKeyValues:temDic];
                    [self.policyArr addObject:temModel];
                }
                //ËΩÆÊí≠ÂõæÊï∞ÊçÆ
                [weakSelf.cycleView getCycleData:self.latestArray];
            }
        }
    } failure:^(NSError *error) {
        JTLog(@"error = %@",error);
    }];
        
    }
    [[NSUserDefaults standardUserDefaults]setValue:self.headerShowType forKey:@"showTypeRequest"];
    [[NSUserDefaults  standardUserDefaults]synchronize];
}
#pragma mark - ÊúÄÊñ∞Âè£Â≠êÊèê‰∫§Êó•Âøó 
-(void)getLogData:(NSString *)platformId {
    JFEditHomemodel *latestModel  =self.latestCycleArray[0];
    [JFSHLogEditTool logRequestCookId:platformId eventTagName:latestModel.tagName eventAction:latestModel.areaId firstEventValue:latestModel.pos secondEventValue:@"1"showType:LogShowType_Home];
}
#pragma mark  - ÂÄíËÆ°Êó∂ viewÁÇπÂáªË∑≥ËΩ¨webviewÁïåÈù¢
-(void)headerViewGesture{
    if (self.webArr.count) {
        JFEditHomemodel *webModel = self.webArr[0];
        [self jumpWebView:webModel];
        [self creditGive:webModel loginModel:self.policyArr[0]];
    }
    
}
#pragma matk - ËΩÆÊí≠ÂõæÁÇπÂáª‰∫ã‰ª∂
-(void)cycleScrollView:(SDCycleScrollView *)cycleScrollView didSelectItemAtIndex:(NSInteger)index{
    JFEditHomemodel *cycleModel = self.latestArray[index];
    [self jumpWebView:cycleModel];
    [self getCycleLogData:[NSString stringWithFormat:@"%@",cycleModel.platformId] selecIndx:index];
    [self creditGive:cycleModel loginModel:self.policyArr[0]];
}
#pragma marl -ËΩÆÊí≠ÂõæÊèê‰∫§Êó•Âøó
-(void)getCycleLogData:(NSString *)platformId selecIndx:(NSInteger)idx{
    JFEditHomemodel *latestModel  =self.latestCycleArray[1];
    [JFSHLogEditTool logRequestCookId:platformId eventTagName:latestModel.tagName eventAction:latestModel.areaId firstEventValue:latestModel.pos secondEventValue:[NSString stringWithFormat:@"%zd",idx]showType:LogShowType_Home];
}
-(void)jumpWebView:(JFEditHomemodel *)webModel{
    //Âà§Êñ≠Áî®Êà∑ÊòØÂê¶Ëé∑ÂèñÂà∞Ââ™ÂàáÊùøÁöÑÂÜÖÂÆπ
    //Ëã•Ê≤°Êúâ Â∞±Ë∑≥ËΩ¨Âà∞ÁôªÂΩïÁïåÈù¢Ëé∑Âèñuserid Áî®‰∫éÁ•ûÊµã
    JFUserInfoTool *userInfo  = [JFUserManager shareManager].currentUserInfo;
    NSMutableArray  *temArr  = [NSMutableArray array];
    [temArr addObject:webModel.name];
    [temArr addObject:webModel.platformId];
    [temArr addObject:@"1"];
    if ([JFHSUtilsTool isBlankString:userInfo.xuserloginIdStr]) {
        [JFShanYanRequestEditTool requestShanYan:self jumpToVC:@"JFWebNewEditViewController" jumVCParameter:webModel.url cityStr:@"" tittlName:@""webArray:[temArr copy]];
    }else{
        JFWebNewEditViewController *webVC =[[JFWebNewEditViewController alloc]init];
        webVC.url = webModel.url;
        webVC.webArr  = [temArr copy];
        [webVC setImgBlock:^{
            JTLog(@"‰∏çÂÅöÊìç‰Ωú");
        }];
        webVC.hidesBottomBarWhenPushed  = YES;
        [self.navigationController pushViewController:webVC animated:YES];
    }
}
#pragma mark  - collectionviewÁ¨¨‰∫åÈÉ®ÂàÜÂØπÂ∫îÁöÑwebURL

-(void)getSecondCollection:(NSString *)areaId  areaTagId:(NSString *)areaTagIdStr selected:(NSInteger)idx{
    NSMutableArray *temArray  =[NSMutableArray array];
    NSMutableArray *webArray  =[NSMutableArray array];
    NSString *second =  [NSString stringWithFormat:@"%@/manager/pf/platforms",HS_USER_URL];
    NSDictionary * dic =  @{@"areaTagId":areaTagIdStr,@"areaId":areaId,@"os":@"ios",@"appName":app_name_type};
    NSString *url   =[JFHSUtilsTool conectUrl:[dic  mutableCopy] url:second];
    [PPNetworkHelper GET:url parameters:nil success:^(id responseObject) {
            JTLog(@"%@",responseObject);
        if ([[NSString stringWithFormat:@"%@",responseObject[@"resultCode"]] isEqualToString:@"0"]) {
            //ËØ∑Ê±ÇÊï∞ÊçÆÊàêÂäü
            [temArray removeAllObjects];
            [webArray removeAllObjects];
            for (NSDictionary  *logDic in responseObject[@"areaTags"]) {
                JFEditLogModel *logModel  = [JFEditLogModel mj_objectWithKeyValues:logDic];
                [temArray addObject:logModel];
            }
            //Ëß£ÊûêË∑≥ËΩ¨webÁïåÈù¢Êï∞ÊçÆ
            for (NSDictionary *webDic in responseObject[@"areaTags"][0][@"platforms"]) {
                JFEditHomemodel *webModel = [JFEditHomemodel mj_objectWithKeyValues:webDic];
                [webArray addObject:webModel];
            }
            if (webArray.count) {
                //Ê≤°ÊúâÊï∞ÊçÆÂ∞±‰∏çË∑≥ËΩ¨ÂíåÊèê‰∫§Á•ûÁ≠ñÊï∞ÊçÆ
                [self jumpWebView:webArray[0]];
                //ËØ∑Ê±ÇÊó•ÂøóÊé•Âè£
                [self getRequestLogData:temArray[0] requestIdx:idx];
                //Êèê‰∫§üíïSuper‰∫ßÂìÅÁ•ûÁ≠ñ Êï∞ÊçÆ
                [self creditGive:webArray[0] loginModel:temArray[0]];
            }
           
        }
    } failure:^(NSError *error) {
        
    }];
    
}
#pragma mark -  ÁÇπÂáªÊèê‰∫§üíïSuperÁ•ûÁ≠ñÊï∞ÊçÆ
-(void)creditGive:(JFEditHomemodel *)giveModel loginModel:(JFEditLogModel *)logModel{
 
    NSDictionary  *dic =  @{@"area_id":logModel.areaId,@"pos":[NSString stringWithFormat:@"%@",logModel.pos],@"product_id":giveModel.platformId,@"product_name":giveModel.name,@"product_url":giveModel.url};
    [[SensorsAnalyticsSDK sharedInstance]track:@"ProductClick" withProperties:dic];

}
#pragma mark - ËØ∑Ê±ÇÊòØÂê¶È¶ñÈ°µÊòæÁ§∫ËΩÆÊí≠ÂõæÊé•Âè£
-(void)cycleAndVestbagData{
    NSString *url  = [NSString stringWithFormat:@"%@/manager/mgt/appVersion/info",HS_USER_URL];
    NSDictionary  *dic  = @{@"productName":app_name_type,@"marketingName":@"ios",@"version":@"2.0"};
    NSDictionary *userDic=  @{@"os":@"ios",@"appName":app_name_type};
    NSString *cyclyUrl   =[JFHSUtilsTool conectUrl:[userDic  mutableCopy] url:url];
    NSString *requestUrl   =   [JFHSUtilsTool conectUrl:[dic mutableCopy] url:cyclyUrl];
    [PPNetworkHelper GET:requestUrl parameters:nil success:^(id responseObject) {
        JTLog(@"%@",responseObject);
        if ([[NSString stringWithFormat:@"%@",responseObject[@"resultCode"]]isEqualToString:@"0"]) {
            NSString *showType = [NSString stringWithFormat:@"%@",responseObject[@"headerModel"]];
         
    
            [self headerUI:showType];
        }
    } failure:^(NSError *error) {
        
    }];
    
}
#pragma mark- ËØ∑Ê±ÇÊó•ÂøóÊé•Âè£

-(void)getRequestLogData:(JFEditLogModel *)logModel requestIdx:(NSInteger)idx{
    NSDictionary *logDic = logModel.platforms[0];
    [JFSHLogEditTool logRequestCookId:[NSString stringWithFormat:@"%@",logDic[@"platformId"]] eventTagName:logModel.tagName eventAction:logModel.areaId firstEventValue:logModel.pos secondEventValue:[NSString stringWithFormat:@"%zd",idx]showType:LogShowType_Home];
}
-(NSArray *)nameArray{
    if (!_nameArray) {
      NSString *big_decod=  [JFHSUtilsTool  decodeFromPercentEscapeString:big_give_text];
         NSString *second_decodeKey =[JFHSUtilsTool stringXORDeocodeWithPlainText:second_tab_text secretKey:codeKey];
        _nameArray = @[second_decodeKey,[JFHSUtilsTool decodeFromPercentEscapeString:give_card_text],big_decod];
    }
    return _nameArray;
}
-(NSArray *)imgArray{
    if (!_imgArray) {
        _imgArray = @[@"newImgHomeLoan",@"newImgcard",@"NewLoanImg"];
    }
    return _imgArray;
}
-(UIView *)headerView{
    if (!_headerView) {
        _headerView= [[UIView alloc]init];
        [self.view  addSubview:_headerView];
        _headerView.backgroundColor = [UIColor clearColor];
    }
    return _headerView;
}
#pragma mark- ÊúÄÊñ∞Âè£Â≠ê
-(JFNewHeaderEditView *)firstHeaderView{
    if (!_firstHeaderView) {
        /**_firstHeaderView Ê∑ªÂä†ÊâãÂäø  ÁÇπÂáªË∑≥ËΩ¨h5ÁïåÈù¢**/
        _firstHeaderView = [[JFNewHeaderEditView alloc]init];
          _firstHeaderView.frame  =CGRectMake(0, 0, JT_ScreenH, 100 * JT_ADAOTER_WIDTH);
        [_firstHeaderView  setGradientBackgroundColor:@"#24ADFF" secondColor:@"#2985FF"];
        UITapGestureRecognizer *getsture = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(headerViewGesture)];
        _firstHeaderView.userInteractionEnabled = YES;
        [_firstHeaderView addGestureRecognizer:getsture];
    }
    return _firstHeaderView;
}
#pragma mark  - ËΩÆÊí≠Âõæ
-(JFNewHomeEditCycleView *)cycleView{
    if (!_cycleView) {
        _cycleView =  [[JFNewHomeEditCycleView alloc]init];
        _cycleView.homeCycle.delegate  = self;
        _cycleView.backgroundColor =[UIColor whiteColor];
        _cycleView.frame  =CGRectMake(0, 0, JT_ScreenW, 180 * JT_ADAOTER_WIDTH);
    }
    return _cycleView;
}
-(UICollectionView *)firstCollectionView{
    if (!_firstCollectionView) {
        UICollectionViewFlowLayout *flowLayout =  [[UICollectionViewFlowLayout alloc]init];
        flowLayout.itemSize = CGSizeMake(105 * JT_ADAOTER_WIDTH, 70 * JT_ADAOTER_WIDTH);
        _firstCollectionView = [[UICollectionView alloc]initWithFrame:CGRectZero collectionViewLayout:flowLayout];
        _firstCollectionView.delegate  =self;
        _firstCollectionView.dataSource = self;
        _firstCollectionView.backgroundColor = [UIColor clearColor];
        //hÊ≥®ÂÜå
        [_firstCollectionView registerClass:[JFHeaderNewCollectionViewCell class] forCellWithReuseIdentifier:@"priceCollection"];
        //Ê≥®ÂÜåÂ∞æÈÉ®
        [_firstCollectionView registerClass:[JFNewHeaderCollectionReusableViewEdit class]forSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"UICollectionElementKindSectionFooter"];
    }
    return _firstCollectionView;
}

-(UICollectionView *)secondCollectionView{
    if (!_secondCollectionView) {
        UICollectionViewFlowLayout *secondflowLayout =  [[UICollectionViewFlowLayout alloc]init];
        secondflowLayout.itemSize = CGSizeMake(JT_ScreenW/4, 110 * JT_ADAOTER_WIDTH);
        secondflowLayout.minimumLineSpacing= 0;
        secondflowLayout.minimumInteritemSpacing  =  0;
        UICollectionView *secondCollectionVC = [[UICollectionView alloc]initWithFrame:CGRectZero collectionViewLayout:secondflowLayout];
        secondCollectionVC.delegate  =self;
        secondCollectionVC.dataSource = self;
        secondCollectionVC.backgroundColor = [UIColor clearColor];
        _secondCollectionView = secondCollectionVC;
        //hÊ≥®ÂÜå
        [_secondCollectionView registerClass:[JFEditHomeSecondNewCollectionViewCell class] forCellWithReuseIdentifier:@"secondCollection"];
    }
    return _secondCollectionView;
}
-(JFPagerViewEdit *)pageingView{
    if (!_pageingView) {
        _pageingView = [[JFPagerViewEdit alloc]initWithDelegate:self];
    }
    return _pageingView;
}
#pragma mark-Êü•ÁúãÊõ¥Â§ö
-(UILabel *)otherNameLable{
    if (!_otherNameLable) {
        _otherNameLable  = [UILabel new];
        [self.categoryView addSubview:_otherNameLable];
        _otherNameLable.text = header_checkmore_text;
        _otherNameLable.font  = kFontSystem(12);
        _otherNameLable.textColor  = [UIColor colorWithHexString:@"999999"];
        UITapGestureRecognizer *gesture   = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(checkMoreGesture)];
        _otherNameLable.userInteractionEnabled  = YES;
        [_otherNameLable addGestureRecognizer:gesture];
    }
    return _otherNameLable;
}
-(JXCategoryTitleView *)categoryView{
    if (!_categoryView) {
        _categoryView = [[JXCategoryTitleView alloc]initWithFrame:CGRectMake(0, 0, JT_ScreenW, JXheightForHeaderInSection *JT_ADAOTER_WIDTH)];
        _categoryView.delegate = self;
        _categoryView.averageCellSpacingEnabled = NO;
        _categoryView.backgroundColor=[UIColor colorWithHexString:@"#F5F5F5"];
        _categoryView.defaultSelectedIndex = 0;
        _categoryView.titleColor = [UIColor colorWithHexString:@"#666666"];
        _categoryView.titleSelectedFont  = kFontSystem(15);
        _categoryView.titleSelectedColor = UIColor.blackColor;
    }
    return _categoryView;
}
@end
